import Vue from 'vue';
import Vuex from 'vuex'
import * as _ from 'lodash'

Vue.use(Vuex);

/* 
 * This store is to organize the prior state of the Scene (which can't be 
 * changed without moving between Animations), the diff being configured for the
 * current Scene (which is set directly), and the diff generated by the current
 * Animation (which is computed from the arguments).
 */
const store = new Vuex.Store({
  state: {
    priorScene: [],
    sceneDiff: {},
    animationDiff: {},
  },
  mutations: {
    updateDiffs(state, payload) {
      if ('sceneDiff' in payload) {
        state.sceneDiff = payload.sceneDiff;
      }
      if ('animationDiff' in payload) {
        state.animationDiff = payload.animationDiff;
      }
    },
  },
  actions: {

  },
  getters: {
    sceneBeforeAnimation(state) {
      let ret = state.priorScene;
      ret = _.concat(ret, state.sceneDiff.add);
      ret = _.difference(ret, state.sceneDiff.remove);
      return ret;
    },
    animationIsValid(state, getters) {
      let sceneBeforeAnimation = getters.sceneBeforeAnimation;
      for (let mobjectName of (state.animationDiff['add'] || [])) {
        if (sceneBeforeAnimation.includes(mobjectName)) {
          return false;
        }
      }
      for (let mobjectName of (state.animationDiff['remove'] || [])) {
        if (!sceneBeforeAnimation.includes(mobjectName)) {
          return false;
        }
      }
      return true;
    }
  }
});

export default store;
